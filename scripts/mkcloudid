#! /usr/bin/perl

use strict;
use warnings;

use version; BEGIN { our $VERSION = qv('0.0') }


############################################################
# Constants
############################################################
use Readonly;

############################################################
# Globals
############################################################
my $max = 0;

############################################################
# Arguments
############################################################
use Getopt::Euclid qw( :vars<opt_> );

############################################################
# Functions
############################################################

sub updtmax {
    # Type  : 
    # Descr : 
    # Params: 
    # Return: 
    # Throws: 
    for my $v (@_) {
       if ($v > $max) { $max = $v }
    }
}

############################################################
# Header
############################################################

print <<'EOT';
\documentclass[a4paper,twoside]{article}

\usepackage{kpfonts}

\usepackage[left=2.8cm, right=4cm, bottom=2.5cm]{geometry}

\usepackage{array}
\usepackage{booktabs}

\usepackage{tikz,pgffor}
\usetikzlibrary{positioning}

\usepackage{xcolor}

\begin{document}

\begin{table}[thb]
\centering
\begin{tikzpicture}

\foreach \pos in {
EOT

############################################################
# Parsing
############################################################
use Parse::CSV;

my $csv = Parse::CSV->new( file => $opt_csvfile );
while (my $csv_row = $csv->fetch ) {
  my $h = $csv_row->[$opt_hcol];
  my $v = $csv_row->[$opt_vcol];
  if (defined($opt_refCol)) {
    $h = 1 - ($h / $csv_row->[$opt_refCol]);
    $v = 1 - ($v / $csv_row->[$opt_refCol]);
  }
  updtmax($h,$v);
  print "\t(" . ($h / $opt_factor) . ', ' . ($v / $opt_factor) . "),\n" ;
}


############################################################
# Footer
############################################################

print "} \\fill \\pos circle(0.03);\n";

if (defined($opt_divStep)) {
  for (my $i = $opt_divStep; $i < $max; $i += $opt_divStep) {
    my $if = $i / $opt_factor;
    print "\\draw (0.05, $if) -- (-0.2, $if) node [anchor=east]  {$i};\n";
    print "\\draw ($if, 0.05) -- ($if, -0.2) node [anchor=north] {$i};\n";
  } 
}

$max = $max / $opt_factor;
print <<"EOT";
\\draw ($max,0) -- (0,0) -- (0, $max);
\\draw (0,0) -- ($max, $max);

EOT

print <<'EOT';
\end{tikzpicture}
\end{table}

\end{document}
EOT


__END__

=head1 NAME

mkcloudid - 

=head1 SYNOPSIS

    mkcloudid [options] -h[col]=<h> -v[col]=<v> <csvfile>

=head1 DESCRIPTION



=head1 REQUIRED ARGUMENTS

=over

=item <csvfile>

=item -h[col][=] <h>

Colon for horizontal axis.

=for Euclid:
  h.type = integer

=item -v[col][=] <v>

Colon for vertical axis.

=for Euclid:
  v.type: integer

=back

=head1 OPTIONS

=over

=item -r[ef[Col]][=] <r>

=item -f[actor][=] <f>

Values are divided by this number

=for Euclid:
  f.type: number
  f.default: 1

=item -d[iv[Step]][=] <d>

Divisions

=back


=head1 DIAGNOSTICS

=over

=item 

=back


=head1 DEPENDENCIES

L<>

=head1 BUGS AND LIMITATIONS

No bugs have been reported.

Please report any bugs or feature requests to C<< <jogo@matabio.net> >>.

=head1 AUTHOR

Joseph Boudou, C<< <jogo@matabio.net> >>

=head1 LICENCE AND COPYRIGHT

Copyright 2009 Joseph Boudou.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself. See L<perlartistic>.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
