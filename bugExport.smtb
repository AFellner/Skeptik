(set .c1 (eq_reflexive :conclusion ((= c_3 c_3))))
(set .c2 (eq_congruent :conclusion ((not (= c_3 c_3)) (not (= c_4 (f1 c_2 c_3))) (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3)))))
(set .c3 (th_resolution :clauses (.c1 .c2) :conclusion ((not (= c_4 (f1 c_2 c_3))) (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3)))))
(set .c4 (eq_congruent :conclusion ((not (= c_4 (f1 c_2 c_3))) (not (= c_3 c_3)) (= (f1 c_3 (f1 c_2 c_3)) (f1 c_3 c_4)))))
(set .c5 (th_resolution :clauses (.c1 .c4) :conclusion ((not (= c_4 (f1 c_2 c_3))) (= (f1 c_3 (f1 c_2 c_3)) (f1 c_3 c_4)))))
(set .c6 (eq_congruent :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= c_3 c_3)) (= (f1 c_3 c_2) (f1 c_3 (f1 c_3 c_0))))))
(set .c7 (th_resolution :clauses (.c1 .c6) :conclusion ((not (= (f1 c_3 c_0) c_2)) (= (f1 c_3 c_2) (f1 c_3 (f1 c_3 c_0))))))
(set .c8 (eq_reflexive :conclusion ((= c_0 c_0))))
(set .c9 (eq_congruent :conclusion ((not (= c_0 c_0)) (not (= (f1 c_3 c_3) c_0)) (= (f1 c_0 c_0) (f1 (f1 c_3 c_3) c_0)))))
(set .c10 (th_resolution :clauses (.c8 .c9) :conclusion ((not (= (f1 c_3 c_3) c_0)) (= (f1 c_0 c_0) (f1 (f1 c_3 c_3) c_0)))))
(set .c11 (eq_transitive :conclusion ((not (= (f1 c_3 c_2) (f1 c_3 (f1 c_3 c_0)))) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 c_0 c_0) (f1 (f1 c_3 c_3) c_0))) (= (f1 c_0 c_0) (f1 c_3 c_2)))))
(set .c12 (th_resolution :clauses (.c10 .c11) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 c_2) (f1 c_3 (f1 c_3 c_0)))) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (= (f1 c_0 c_0) (f1 c_3 c_2)))))
(set .c13 (th_resolution :clauses (.c7 .c12) :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (= (f1 c_0 c_0) (f1 c_3 c_2)))))
(set .c14 (eq_congruent :conclusion ((not (= c_3 c_3)) (not (= (f1 c_0 c_0) (f1 c_3 c_2))) (= (f1 (f1 c_0 c_0) c_3) (f1 (f1 c_3 c_2) c_3)))))
(set .c15 (th_resolution :clauses (.c1 .c14) :conclusion ((not (= (f1 c_0 c_0) (f1 c_3 c_2))) (= (f1 (f1 c_0 c_0) c_3) (f1 (f1 c_3 c_2) c_3)))))
(set .c16 (th_resolution :clauses (.c13 .c15) :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (= (f1 (f1 c_0 c_0) c_3) (f1 (f1 c_3 c_2) c_3)))))
(set .c17 (eq_congruent :conclusion ((not (= c_3 c_3)) (not (= (f1 c_3 c_3) c_0)) (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3)))))
(set .c18 (th_resolution :clauses (.c1 .c17) :conclusion ((not (= (f1 c_3 c_3) c_0)) (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3)))))
(set .c19 (eq_congruent :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= c_3 c_3)) (= (f1 c_3 c_0) (f1 c_3 (f1 c_3 c_3))))))
(set .c20 (th_resolution :clauses (.c1 .c19) :conclusion ((not (= (f1 c_3 c_3) c_0)) (= (f1 c_3 c_0) (f1 c_3 (f1 c_3 c_3))))))
(set .c21 (eq_transitive :conclusion ((not (= (f1 c_3 c_0) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3))) (= (f1 c_0 c_3) (f1 c_3 c_0)))))
(set .c22 (th_resolution :clauses (.c20 .c21) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3))) (= (f1 c_0 c_3) (f1 c_3 c_0)))))
(set .c23 (th_resolution :clauses (.c18 .c22) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (= (f1 c_0 c_3) (f1 c_3 c_0)))))
(set .c24 (eq_congruent :conclusion ((not (= (f1 c_0 c_3) (f1 c_3 c_0))) (not (= c_0 c_0)) (= (f1 c_0 (f1 c_0 c_3)) (f1 c_0 (f1 c_3 c_0))))))
(set .c25 (th_resolution :clauses (.c23 .c24) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= c_0 c_0)) (= (f1 c_0 (f1 c_0 c_3)) (f1 c_0 (f1 c_3 c_0))))))
(set .c26 (th_resolution :clauses (.c8 .c25) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (= (f1 c_0 (f1 c_0 c_3)) (f1 c_0 (f1 c_3 c_0))))))
(set .c27 (eq_transitive :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_0) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3))) (= (f1 c_0 c_3) c_2))))
(set .c28 (th_resolution :clauses (.c20 .c27) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3))) (= (f1 c_0 c_3) c_2))))
(set .c29 (th_resolution :clauses (.c18 .c28) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (= (f1 c_0 c_3) c_2))))
(set .c30 (eq_congruent :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_0 c_3) c_2)) (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_0 c_3) c_0)))))
(set .c31 (th_resolution :clauses (.c29 .c30) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_0 c_3) c_0)))))
(set .c32 (eq_transitive :conclusion ((not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 c_3 c_4))) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 (f1 c_0 c_0) c_3) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_0 c_3) c_0))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3))) (= (f1 c_4 c_3) c_1))))
(set .c33 (th_resolution :clauses (.c31 .c32) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 c_3 c_4))) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 (f1 c_0 c_0) c_3) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3))) (= (f1 c_4 c_3) c_1))))
(set .c34 (th_resolution :clauses (.c26 .c33) :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 c_3 c_4))) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 (f1 c_0 c_0) c_3) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3))) (= (f1 c_4 c_3) c_1))))
(set .c35 (th_resolution :clauses (.c16 .c34) :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 c_3 c_4))) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3))) (= (f1 c_4 c_3) c_1))))
(set .c36 (th_resolution :clauses (.c5 .c35) :conclusion ((not (= c_4 (f1 c_2 c_3))) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3))) (= (f1 c_4 c_3) c_1))))
(set .c37 (th_resolution :clauses (.c3 .c36) :conclusion ((not (= c_4 (f1 c_2 c_3))) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (= (f1 c_4 c_3) c_1))))
(set .c38 (eq_reflexive :conclusion ((= c_2 c_2))))
(set .c39 (eq_congruent :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= c_2 c_2)) (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2)))))
(set .c40 (th_resolution :clauses (.c38 .c39) :conclusion ((not (= (f1 c_3 c_0) c_2)) (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2)))))
(set .c41 (eq_congruent :conclusion ((not (= c_0 c_0)) (not (= c_4 (f1 c_2 c_3))) (= (f1 c_4 c_0) (f1 (f1 c_2 c_3) c_0)))))
(set .c42 (th_resolution :clauses (.c8 .c41) :conclusion ((not (= c_4 (f1 c_2 c_3))) (= (f1 c_4 c_0) (f1 (f1 c_2 c_3) c_0)))))
(set .c43 (eq_transitive :conclusion ((not (= (f1 c_2 c_2) c_3)) (not (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (not (= (f1 c_4 c_0) (f1 (f1 c_2 c_3) c_0))) (= (f1 c_4 c_0) c_3))))
(set .c44 (th_resolution :clauses (.c42 .c43) :conclusion ((not (= c_4 (f1 c_2 c_3))) (not (= (f1 c_2 c_2) c_3)) (not (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (= (f1 c_4 c_0) c_3))))
(set .c45 (th_resolution :clauses (.c40 .c44) :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= c_4 (f1 c_2 c_3))) (not (= (f1 c_2 c_2) c_3)) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (= (f1 c_4 c_0) c_3))))
(set .c46 (eq_congruent :conclusion ((not (= (f1 c_4 c_0) c_3)) (not (= (f1 c_4 c_3) c_1)) (= (f1 (f1 c_4 c_3) c_3) (f1 c_1 (f1 c_4 c_0))))))
(set .c47 (th_resolution :clauses (.c45 .c46) :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= c_4 (f1 c_2 c_3))) (not (= (f1 c_2 c_2) c_3)) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (not (= (f1 c_4 c_3) c_1)) (= (f1 (f1 c_4 c_3) c_3) (f1 c_1 (f1 c_4 c_0))))))
(set .c48 (th_resolution :clauses (.c37 .c47) :conclusion ((not (= c_4 (f1 c_2 c_3))) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_2 c_2) c_3)) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (= (f1 (f1 c_4 c_3) c_3) (f1 c_1 (f1 c_4 c_0))))))
(set .c49 (eq_transitive :conclusion ((not (= (f1 c_1 c_4) c_0)) (not (= (f1 c_3 c_3) c_0)) (= (f1 c_3 c_3) (f1 c_1 c_4)))))
(set .c50 (eq_congruent :conclusion ((not (= c_0 c_0)) (not (= (f1 c_3 c_3) (f1 c_1 c_4))) (= (f1 (f1 c_1 c_4) c_0) (f1 (f1 c_3 c_3) c_0)))))
(set .c51 (th_resolution :clauses (.c8 .c50) :conclusion ((not (= (f1 c_3 c_3) (f1 c_1 c_4))) (= (f1 (f1 c_1 c_4) c_0) (f1 (f1 c_3 c_3) c_0)))))
(set .c52 (th_resolution :clauses (.c49 .c51) :conclusion ((not (= (f1 c_1 c_4) c_0)) (not (= (f1 c_3 c_3) c_0)) (= (f1 (f1 c_1 c_4) c_0) (f1 (f1 c_3 c_3) c_0)))))
(set .c53 (eq_transitive :conclusion ((not (= (f1 c_2 c_2) c_3)) (not (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_1 (f1 c_4 c_0)))) (not (= (f1 c_1 (f1 c_4 c_0)) (f1 (f1 c_1 c_4) c_0))) (not (= (f1 (f1 c_1 c_4) c_0) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 c_3 (f1 c_0 c_3)) (f1 c_3 (f1 c_3 c_0)))) (not (= (f1 (f1 c_3 c_0) c_3) (f1 c_3 (f1 c_0 c_3)))) (not (= (f1 c_2 c_3) (f1 (f1 c_3 c_0) c_3))) (not (= c_4 (f1 c_2 c_3))) (= c_4 c_3))))
(set .c54 (th_resolution :clauses (.c52 .c53) :conclusion ((not (= (f1 c_1 c_4) c_0)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_2 c_2) c_3)) (not (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_1 (f1 c_4 c_0)))) (not (= (f1 c_1 (f1 c_4 c_0)) (f1 (f1 c_1 c_4) c_0))) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 c_3 (f1 c_0 c_3)) (f1 c_3 (f1 c_3 c_0)))) (not (= (f1 (f1 c_3 c_0) c_3) (f1 c_3 (f1 c_0 c_3)))) (not (= (f1 c_2 c_3) (f1 (f1 c_3 c_0) c_3))) (not (= c_4 (f1 c_2 c_3))) (= c_4 c_3))))
(set .c55 (th_resolution :clauses (.c48 .c54) :conclusion ((not (= c_4 (f1 c_2 c_3))) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_2 c_2) c_3)) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (not (= (f1 c_1 c_4) c_0)) (not (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 c_1 (f1 c_4 c_0)) (f1 (f1 c_1 c_4) c_0))) (not (= (f1 c_3 (f1 c_0 c_3)) (f1 c_3 (f1 c_3 c_0)))) (not (= (f1 (f1 c_3 c_0) c_3) (f1 c_3 (f1 c_0 c_3)))) (not (= (f1 c_2 c_3) (f1 (f1 c_3 c_0) c_3))) (= c_4 c_3))))
