(set .c1 (input :conclusion (#1:(and #2:(or #3:(and #4:(= y0 x0) #5:(= y0 x1)) #6:(and #7:(= z0 x0) #8:(= z0 x1))) #9:(or #10:(and #11:(= y1 x1) #12:(= y1 x2)) #13:(and #14:(= z1 x1) #15:(= z1 x2))) #16:(or #17:(and #18:(= x2 y2) #19:(= x3 y2)) #20:(and #21:(= z2 x2) #22:(= z2 x3))) #23:(or #24:(and #25:(= y3 x3) #26:(= x4 y3)) #27:(and #28:(= z3 x3) #29:(= z3 x4))) (not #30:(= x4 x0))))))
(set .c2 (and :clauses (.c1) :conclusion (#2)))
(set .c3 (and_pos :conclusion ((not #3) #4)))
(set .c4 (and_pos :conclusion ((not #3) #5)))
(set .c5 (and_pos :conclusion ((not #6) #7)))
(set .c6 (and_pos :conclusion ((not #6) #8)))
(set .c7 (or :clauses (.c2) :conclusion (#3 #6)))
(set .c8 (and :clauses (.c1) :conclusion (#9)))
(set .c9 (and_pos :conclusion ((not #10) #11)))
(set .c10 (and_pos :conclusion ((not #10) #12)))
(set .c11 (and_pos :conclusion ((not #13) #14)))
(set .c12 (and_pos :conclusion ((not #13) #15)))
(set .c13 (or :clauses (.c8) :conclusion (#10 #13)))
(set .c14 (and :clauses (.c1) :conclusion (#16)))
(set .c15 (and_pos :conclusion ((not #17) #18)))
(set .c16 (and_pos :conclusion ((not #17) #19)))
(set .c17 (and_pos :conclusion ((not #20) #21)))
(set .c18 (and_pos :conclusion ((not #20) #22)))
(set .c19 (or :clauses (.c14) :conclusion (#17 #20)))
(set .c20 (and :clauses (.c1) :conclusion (#23)))
(set .c21 (and_pos :conclusion ((not #24) #25)))
(set .c22 (and_pos :conclusion ((not #24) #26)))
(set .c23 (and_pos :conclusion ((not #27) #28)))
(set .c24 (and_pos :conclusion ((not #27) #29)))
(set .c25 (or :clauses (.c20) :conclusion (#24 #27)))
(set .c26 (and :clauses (.c1) :conclusion ((not #30))))
(set .c27 (eq_transitive :conclusion ((not #26) (not #25) (not #19) (not #18) (not #12) (not #11) (not #8) (not #7) #30)))
(set .c28 (resolution :clauses (.c27 .c26) :conclusion ((not #26) (not #25) (not #19) (not #18) (not #12) (not #11) (not #8) (not #7))))
(set .c29 (resolution :clauses (.c28 .c10 .c9) :conclusion ((not #26) (not #25) (not #19) (not #18) (not #8) (not #7) (not #10))))
(set .c30 (eq_transitive :conclusion ((not #26) (not #25) (not #19) (not #18) (not #15) (not #14) (not #8) (not #7) #30)))
(set .c31 (resolution :clauses (.c30 .c26) :conclusion ((not #26) (not #25) (not #19) (not #18) (not #15) (not #14) (not #8) (not #7))))
(set .c32 (resolution :clauses (.c31 .c12 .c11 .c13 .c29 .c16 .c15) :conclusion ((not #26) (not #25) (not #8) (not #7) (not #17))))
(set .c33 (eq_transitive :conclusion ((not #26) (not #25) (not #22) (not #21) (not #15) (not #14) (not #8) (not #7) #30)))
(set .c34 (resolution :clauses (.c33 .c26) :conclusion ((not #26) (not #25) (not #22) (not #21) (not #15) (not #14) (not #8) (not #7))))
(set .c35 (eq_transitive :conclusion ((not #26) (not #25) (not #22) (not #21) (not #12) (not #11) (not #8) (not #7) #30)))
(set .c36 (resolution :clauses (.c35 .c26) :conclusion ((not #26) (not #25) (not #22) (not #21) (not #12) (not #11) (not #8) (not #7))))
(set .c37 (resolution :clauses (.c36 .c10 .c9) :conclusion ((not #26) (not #25) (not #22) (not #21) (not #8) (not #7) (not #10))))
(set .c38 (resolution :clauses (.c34 .c12 .c11 .c13 .c37 .c18 .c17 .c19 .c32 .c22 .c21) :conclusion ((not #8) (not #7) (not #24))))
(set .c39 (eq_transitive :conclusion ((not #29) (not #28) (not #22) (not #21) (not #15) (not #14) (not #8) (not #7) #30)))
(set .c40 (resolution :clauses (.c39 .c26) :conclusion ((not #29) (not #28) (not #22) (not #21) (not #15) (not #14) (not #8) (not #7))))
(set .c41 (eq_transitive :conclusion ((not #29) (not #28) (not #19) (not #18) (not #15) (not #14) (not #8) (not #7) #30)))
(set .c42 (resolution :clauses (.c41 .c26) :conclusion ((not #29) (not #28) (not #19) (not #18) (not #15) (not #14) (not #8) (not #7))))
(set .c43 (resolution :clauses (.c42 .c16 .c15) :conclusion ((not #29) (not #28) (not #15) (not #14) (not #8) (not #7) (not #17))))
(set .c44 (resolution :clauses (.c40 .c18 .c17 .c19 .c43 .c12 .c11) :conclusion ((not #29) (not #28) (not #8) (not #7) (not #13))))
(set .c45 (eq_transitive :conclusion ((not #15) (not #12) (not #11) #14)))
(set .c46 (eq_transitive :conclusion ((not #14) (not #11) (not #12) #15)))
(set .c47 (eq_transitive :conclusion ((not #29) (not #28) (not #22) (not #21) (not #12) (not #11) (not #8) (not #7) #30)))
(set .c48 (resolution :clauses (.c47 .c26) :conclusion ((not #29) (not #28) (not #22) (not #21) (not #12) (not #11) (not #8) (not #7))))
(set .c49 (resolution :clauses (.c48 .c18 .c17) :conclusion ((not #29) (not #28) (not #12) (not #11) (not #8) (not #7) (not #20))))
(set .c50 (eq_transitive :conclusion ((not #29) (not #28) (not #19) (not #18) (not #12) (not #11) (not #8) (not #7) #30)))
(set .c51 (resolution :clauses (.c50 .c26) :conclusion ((not #29) (not #28) (not #19) (not #18) (not #12) (not #11) (not #8) (not #7))))
(set .c52 (resolution :clauses (.c51 .c16 .c15 .c19 .c49 .c10 .c9 .c13 .c44 .c24 .c23 .c25 .c38 .c6 .c5) :conclusion ((not #6))))
(set .c53 (resolution :clauses (.c7 .c52) :conclusion (#3)))
(set .c54 (resolution :clauses (.c3 .c53) :conclusion (#4)))
(set .c55 (resolution :clauses (.c4 .c53) :conclusion (#5)))
(set .c56 (eq_transitive :conclusion ((not #29) (not #28) (not #19) (not #18) (not #12) (not #11) (not #5) (not #4) #30)))
(set .c57 (resolution :clauses (.c56 .c54 .c55 .c26) :conclusion ((not #29) (not #28) (not #19) (not #18) (not #12) (not #11))))
(set .c58 (resolution :clauses (.c57 .c10 .c9) :conclusion ((not #29) (not #28) (not #19) (not #18) (not #10))))
(set .c59 (eq_transitive :conclusion ((not #29) (not #28) (not #19) (not #18) (not #15) (not #14) (not #5) (not #4) #30)))
(set .c60 (resolution :clauses (.c59 .c54 .c55 .c26) :conclusion ((not #29) (not #28) (not #19) (not #18) (not #15) (not #14))))
(set .c61 (resolution :clauses (.c60 .c12 .c11 .c13 .c58) :conclusion ((not #29) (not #28) (not #19) (not #18))))
(set .c62 (eq_transitive :conclusion ((not #29) (not #26) (not #25) #28)))
(set .c63 (resolution :clauses (.c62 .c22 .c21 .c25 .c23 .c61) :conclusion ((not #29) (not #19) (not #18))))
(set .c64 (eq_transitive :conclusion ((not #26) (not #25) (not #19) (not #18) (not #15) (not #14) (not #5) (not #4) #30)))
(set .c65 (resolution :clauses (.c64 .c54 .c55 .c26) :conclusion ((not #26) (not #25) (not #19) (not #18) (not #15) (not #14))))
(set .c66 (resolution :clauses (.c45 .c10 .c9 .c13 .c11 .c65) :conclusion ((not #15) (not #26) (not #25) (not #19) (not #18))))
(set .c67 (eq_transitive :conclusion ((not #26) (not #25) (not #19) (not #18) (not #12) (not #11) (not #5) (not #4) #30)))
(set .c68 (resolution :clauses (.c67 .c54 .c55 .c26) :conclusion ((not #26) (not #25) (not #19) (not #18) (not #12) (not #11))))
(set .c69 (resolution :clauses (.c68 .c10 .c9 .c13 .c12 .c66 .c22 .c21 .c25 .c24 .c63) :conclusion ((not #19) (not #18))))
(set .c70 (eq_transitive :conclusion ((not #22) (not #21) (not #18) #19)))
(set .c71 (resolution :clauses (.c70 .c18 .c17 .c19 .c16 .c69) :conclusion ((not #18))))
(set .c72 (resolution :clauses (.c15 .c71) :conclusion ((not #17))))
(set .c73 (resolution :clauses (.c19 .c72) :conclusion (#20)))
(set .c74 (resolution :clauses (.c17 .c73) :conclusion (#21)))
(set .c75 (resolution :clauses (.c18 .c73) :conclusion (#22)))
(set .c76 (eq_transitive :conclusion ((not #26) (not #25) (not #22) (not #21) (not #12) (not #11) (not #5) (not #4) #30)))
(set .c77 (resolution :clauses (.c76 .c54 .c55 .c74 .c75 .c26) :conclusion ((not #26) (not #25) (not #12) (not #11))))
(set .c78 (resolution :clauses (.c77 .c10 .c9) :conclusion ((not #26) (not #25) (not #10))))
(set .c79 (eq_transitive :conclusion ((not #26) (not #25) (not #22) (not #21) (not #15) (not #14) (not #5) (not #4) #30)))
(set .c80 (resolution :clauses (.c79 .c54 .c55 .c74 .c75 .c26) :conclusion ((not #26) (not #25) (not #15) (not #14))))
(set .c81 (resolution :clauses (.c80 .c12 .c11 .c13 .c78 .c22 .c21) :conclusion ((not #24))))
(set .c82 (resolution :clauses (.c25 .c81) :conclusion (#27)))
(set .c83 (resolution :clauses (.c23 .c82) :conclusion (#28)))
(set .c84 (resolution :clauses (.c24 .c82) :conclusion (#29)))
(set .c85 (eq_transitive :conclusion ((not #29) (not #28) (not #22) (not #21) (not #15) (not #14) (not #5) (not #4) #30)))
(set .c86 (resolution :clauses (.c85 .c54 .c55 .c74 .c75 .c83 .c84 .c26) :conclusion ((not #15) (not #14))))
(set .c87 (resolution :clauses (.c46 .c10 .c9 .c13 .c12 .c86) :conclusion ((not #14))))
(set .c88 (resolution :clauses (.c11 .c87) :conclusion ((not #13))))
(set .c89 (resolution :clauses (.c13 .c88) :conclusion (#10)))
(set .c90 (resolution :clauses (.c9 .c89) :conclusion (#11)))
(set .c91 (resolution :clauses (.c10 .c89) :conclusion (#12)))
(set .c92 (eq_transitive :conclusion ((not #29) (not #28) (not #22) (not #21) (not #12) (not #11) (not #5) (not #4) #30)))
(set .c93 (resolution :clauses (.c92 .c54 .c55 .c90 .c91 .c74 .c75 .c83 .c84 .c26) :conclusion ()))
