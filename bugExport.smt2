(set .c1 (eq_reflexive :conclusion ((= c_3 c_3))))
(set .c2 (eq_congruent :conclusion ((not (= c_3 c_3)) (not (= c_4 (f1 c_2 c_3))) (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3)))))
(set .c3 (eq_congruent :conclusion ((not (= c_4 (f1 c_2 c_3))) (not (= c_3 c_3)) (= (f1 c_3 (f1 c_2 c_3)) (f1 c_3 c_4)))))
(set .c4 (eq_congruent :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= c_3 c_3)) (= (f1 c_3 c_2) (f1 c_3 (f1 c_3 c_0))))))
(set .c5 (eq_reflexive :conclusion ((= c_0 c_0))))
(set .c6 (eq_congruent :conclusion ((not (= c_0 c_0)) (not (= (f1 c_3 c_3) c_0)) (= (f1 c_0 c_0) (f1 (f1 c_3 c_3) c_0)))))
(set .c7 (eq_transitive :conclusion ((not (= (f1 c_3 c_2) (f1 c_3 (f1 c_3 c_0)))) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 c_0 c_0) (f1 (f1 c_3 c_3) c_0))) (= (f1 c_0 c_0) (f1 c_3 c_2)))))
(set .c8 (eq_congruent :conclusion ((not (= c_3 c_3)) (not (= (f1 c_0 c_0) (f1 c_3 c_2))) (= (f1 (f1 c_0 c_0) c_3) (f1 (f1 c_3 c_2) c_3)))))
(set .c9 (eq_congruent :conclusion ((not (= c_3 c_3)) (not (= (f1 c_3 c_3) c_0)) (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3)))))
(set .c10 (th_resolution :clauses (.c1 .c9) :conclusion ((not (= (f1 c_3 c_3) c_0)) (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3)))))
(set .c11 (eq_congruent :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= c_3 c_3)) (= (f1 c_3 c_0) (f1 c_3 (f1 c_3 c_3))))))
(set .c12 (th_resolution :clauses (.c1 .c11) :conclusion ((not (= (f1 c_3 c_3) c_0)) (= (f1 c_3 c_0) (f1 c_3 (f1 c_3 c_3))))))
(set .c13 (eq_transitive :conclusion ((not (= (f1 c_3 c_0) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3))) (= (f1 c_0 c_3) (f1 c_3 c_0)))))
(set .c14 (eq_congruent :conclusion ((not (= (f1 c_0 c_3) (f1 c_3 c_0))) (not (= c_0 c_0)) (= (f1 c_0 (f1 c_0 c_3)) (f1 c_0 (f1 c_3 c_0))))))
(set .c15 (eq_transitive :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_0) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_0 c_3) (f1 (f1 c_3 c_3) c_3))) (= (f1 c_0 c_3) c_2))))
(set .c16 (eq_congruent :conclusion ((not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_0 c_3) c_2)) (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_0 c_3) c_0)))))
(set .c17 (eq_transitive :conclusion ((not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 c_3 c_4))) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 (f1 c_0 c_0) c_3) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_0 c_3) c_0))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_4 c_3) (f1 (f1 c_2 c_3) c_3))) (= (f1 c_4 c_3) c_1))))
(set .c18 (eq_reflexive :conclusion ((= c_2 c_2))))
(set .c19 (eq_congruent :conclusion ((not (= (f1 c_3 c_0) c_2)) (not (= c_2 c_2)) (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2)))))
(set .c20 (eq_congruent :conclusion ((not (= c_0 c_0)) (not (= c_4 (f1 c_2 c_3))) (= (f1 c_4 c_0) (f1 (f1 c_2 c_3) c_0)))))
(set .c21 (eq_transitive :conclusion ((not (= (f1 c_2 c_2) c_3)) (not (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (not (= (f1 c_4 c_0) (f1 (f1 c_2 c_3) c_0))) (= (f1 c_4 c_0) c_3))))
(set .c22 (eq_congruent :conclusion ((not (= (f1 c_4 c_0) c_3)) (not (= (f1 c_4 c_3) c_1)) (= (f1 (f1 c_4 c_3) c_3) (f1 c_1 (f1 c_4 c_0))))))
(set .c23 (eq_transitive :conclusion ((not (= (f1 c_1 c_4) c_0)) (not (= (f1 c_3 c_3) c_0)) (= (f1 c_3 c_3) (f1 c_1 c_4)))))
(set .c24 (eq_congruent :conclusion ((not (= c_0 c_0)) (not (= (f1 c_3 c_3) (f1 c_1 c_4))) (= (f1 (f1 c_1 c_4) c_0) (f1 (f1 c_3 c_3) c_0)))))
(set .c25 (eq_transitive :conclusion ((not (= (f1 c_2 c_2) c_3)) (not (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_1 (f1 c_4 c_0)))) (not (= (f1 c_1 (f1 c_4 c_0)) (f1 (f1 c_1 c_4) c_0))) (not (= (f1 (f1 c_1 c_4) c_0) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 c_3 (f1 c_0 c_3)) (f1 c_3 (f1 c_3 c_0)))) (not (= (f1 (f1 c_3 c_0) c_3) (f1 c_3 (f1 c_0 c_3)))) (not (= (f1 c_2 c_3) (f1 (f1 c_3 c_0) c_3))) (not (= c_4 (f1 c_2 c_3))) (= c_4 c_3))))
(set .c26 (th_resolution :clauses (.c1 .c2 .c1 .c3 .c1 .c4 .c5 .c6 .c7 .c1 .c8 .c5 .c10 .c12 .c13 .c14 .c10 .c12 .c15 .c16 .c17 .c18 .c19 .c5 .c20 .c21 .c22 .c23 .c5 .c24 .c25) :conclusion ((not (= c_4 (f1 c_2 c_3))) (not (= (f1 c_3 c_0) c_2)) (not (= (f1 c_3 c_3) c_0)) (not (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_3 c_4) c_1)) (not (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))) (not (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))) (not (= (f1 (f1 c_0 c_3) c_0) (f1 c_0 (f1 c_3 c_0)))) (not (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))) (not (= (f1 c_2 c_2) c_3)) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_2 (f1 c_3 c_0)))) (not (= (f1 c_1 c_4) c_0)) (not (= (f1 c_2 (f1 c_3 c_0)) (f1 c_2 c_2))) (not (= (f1 (f1 c_2 c_3) c_0) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 c_1 (f1 c_4 c_0)) (f1 (f1 c_1 c_4) c_0))) (not (= (f1 c_3 (f1 c_0 c_3)) (f1 c_3 (f1 c_3 c_0)))) (not (= (f1 (f1 c_3 c_0) c_3) (f1 c_3 (f1 c_0 c_3)))) (not (= (f1 c_2 c_3) (f1 (f1 c_3 c_0) c_3))) (= c_4 c_3))))
