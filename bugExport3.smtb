(set .c1 (eq_reflexive :conclusion ((= c_4 c_4))))
(set .c2 (eq_congruent :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= c_4 c_4)) (= (f1 c_4 c_4) (f1 c_4 (f1 c_3 c_3))))))
(set .c3 (th_resolution :clauses (.c1 .c2) :conclusion ((not (= (f1 c_3 c_3) c_4)) (= (f1 c_4 c_4) (f1 c_4 (f1 c_3 c_3))))))
(set .c4 (eq_reflexive :conclusion ((= c_3 c_3))))
(set .c5 (eq_congruent :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= c_3 c_3)) (= (f1 c_3 c_4) (f1 c_3 (f1 c_3 c_3))))))
(set .c6 (th_resolution :clauses (.c4 .c5) :conclusion ((not (= (f1 c_3 c_3) c_4)) (= (f1 c_3 c_4) (f1 c_3 (f1 c_3 c_3))))))
(set .c7 (eq_congruent :conclusion ((not (= c_3 c_3)) (not (= (f1 c_3 c_3) c_4)) (= (f1 c_4 c_3) (f1 (f1 c_3 c_3) c_3)))))
(set .c8 (th_resolution :clauses (.c4 .c7) :conclusion ((not (= (f1 c_3 c_3) c_4)) (= (f1 c_4 c_3) (f1 (f1 c_3 c_3) c_3)))))
(set .c9 (eq_transitive :conclusion ((not (= (f1 c_3 c_4) c_2)) (not (= (f1 c_3 c_4) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_4 c_3) (f1 (f1 c_3 c_3) c_3))) (= (f1 c_4 c_3) c_2))))
(set .c10 (th_resolution :clauses (.c8 .c9) :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= (f1 c_3 c_4) c_2)) (not (= (f1 c_3 c_4) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (= (f1 c_4 c_3) c_2))))
(set .c11 (th_resolution :clauses (.c6 .c10) :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= (f1 c_3 c_4) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (= (f1 c_4 c_3) c_2))))
(set .c12 (eq_congruent :conclusion ((not (= c_3 c_3)) (not (= (f1 c_4 c_3) c_2)) (= (f1 (f1 c_4 c_3) c_3) (f1 c_2 c_3)))))
(set .c13 (th_resolution :clauses (.c4 .c12) :conclusion ((not (= (f1 c_4 c_3) c_2)) (= (f1 (f1 c_4 c_3) c_3) (f1 c_2 c_3)))))
(set .c14 (th_resolution :clauses (.c11 .c13) :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= (f1 c_3 c_4) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (= (f1 (f1 c_4 c_3) c_3) (f1 c_2 c_3)))))
(set .c15 (eq_transitive :conclusion ((not (= (f1 c_2 c_3) c_1)) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_2 c_3))) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 c_4 c_4) (f1 c_4 (f1 c_3 c_3)))) (= (f1 c_4 c_4) c_1))))
(set .c16 (th_resolution :clauses (.c14 .c15) :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= (f1 c_3 c_4) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_2 c_3) c_1)) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 c_4 c_4) (f1 c_4 (f1 c_3 c_3)))) (= (f1 c_4 c_4) c_1))))
(set .c17 (th_resolution :clauses (.c3 .c16) :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= (f1 c_3 c_4) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_2 c_3) c_1)) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (= (f1 c_4 c_4) c_1))))
(set .c18 (eq_congruent :conclusion ((not (= (f1 c_4 c_4) c_1)) (not (= c_3 c_3)) (= (f1 c_3 c_1) (f1 c_3 (f1 c_4 c_4))))))
(set .c19 (th_resolution :clauses (.c4 .c18) :conclusion ((not (= (f1 c_4 c_4) c_1)) (= (f1 c_3 c_1) (f1 c_3 (f1 c_4 c_4))))))
(set .c20 (th_resolution :clauses (.c17 .c19) :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= (f1 c_3 c_4) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_2 c_3) c_1)) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (= (f1 c_3 c_1) (f1 c_3 (f1 c_4 c_4))))))
(set .c21 (eq_transitive :conclusion ((not (= (f1 c_3 c_1) c_2)) (not (= (f1 c_3 c_1) (f1 c_3 (f1 c_4 c_4)))) (not (= (f1 (f1 c_3 c_4) c_4) (f1 c_3 (f1 c_4 c_4)))) (not (= (f1 (f1 c_4 c_3) c_4) (f1 (f1 c_3 c_4) c_4))) (not (= (f1 (f1 c_4 c_3) c_4) (f1 c_4 (f1 c_3 c_4)))) (not (= (f1 c_4 (f1 c_3 c_4)) (f1 c_4 (f1 c_4 c_2)))) (not (= (f1 (f1 c_4 c_4) c_2) (f1 c_4 (f1 c_4 c_2)))) (not (= (f1 (f1 c_4 c_4) c_2) (f1 (f1 c_3 c_2) c_2))) (not (= (f1 c_3 (f1 c_2 c_2)) (f1 (f1 c_3 c_2) c_2))) (not (= (f1 c_3 c_3) (f1 c_3 (f1 c_2 c_2)))) (not (= (f1 c_3 c_3) c_4)) (= c_4 c_2))))
(set .c22 (th_resolution :clauses (.c20 .c21) :conclusion ((not (= (f1 c_3 c_3) c_4)) (not (= (f1 c_3 c_4) c_2)) (not (= (f1 (f1 c_3 c_3) c_3) (f1 c_3 (f1 c_3 c_3)))) (not (= (f1 c_2 c_3) c_1)) (not (= (f1 (f1 c_4 c_3) c_3) (f1 c_4 (f1 c_3 c_3)))) (not (= (f1 c_3 c_1) c_2)) (not (= (f1 (f1 c_3 c_4) c_4) (f1 c_3 (f1 c_4 c_4)))) (not (= (f1 (f1 c_4 c_3) c_4) (f1 (f1 c_3 c_4) c_4))) (not (= (f1 (f1 c_4 c_3) c_4) (f1 c_4 (f1 c_3 c_4)))) (not (= (f1 c_4 (f1 c_3 c_4)) (f1 c_4 (f1 c_4 c_2)))) (not (= (f1 (f1 c_4 c_4) c_2) (f1 c_4 (f1 c_4 c_2)))) (not (= (f1 (f1 c_4 c_4) c_2) (f1 (f1 c_3 c_2) c_2))) (not (= (f1 c_3 (f1 c_2 c_2)) (f1 (f1 c_3 c_2) c_2))) (not (= (f1 c_3 c_3) (f1 c_3 (f1 c_2 c_2)))) (= c_4 c_2))))
